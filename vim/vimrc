set term=screen-256color
set number		        " show line numbers
set ruler		        " set the botom ruler
set showmatch           " show matching bracket (briefly jump)
set showmode            " show mode in status bar (insert/replace/...)
set showcmd             " show typed command in status bar
set ruler               " show cursor position in status bar
set title   
set laststatus=2        " use 2 lines for the status bar
set matchtime=2         " show matching bracket for 0.2 seconds
set matchpairs+=<:>     " specially for html
set ignorecase          " case insensitive searching
set smartcase           " but become case sensitive if you type uppercase characters
set smartindent         " smart auto indenting
set smarttab            " smart tab handling for indenting
set tabstop=4           " number of spaces a tab counts for
set shiftwidth=4        " spaces for autoindents
set expandtab           " turn a tabs into spaces
set matchpairs+=<:>     " specially for html
syntax on
set background=dark
let g:solarized_termtrans = 1
"-----------------------------------------------------------------------------
"" Set up our color scheme
"-----------------------------------------------------------------------------
colorscheme jellybeans
"-----------------------------------------------------------------------------
"" Load Vundle: VUNDLE is a plugin manager for VIM
"" install via: git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim
"
" Install with :PluginInstall
"-----------------------------------------------------------------------------
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'

" addons
" vundle (let vundle manage and update itself)
Bundle 'gmarik/vundle'
"-----------------------------------------------------------------------------
"" NERD Tree Plugin Settings
"" install via: git clone https://github.com/scrooloose/nerdtree.git ~/.vim/bundle/nerdtree
"-----------------------------------------------------------------------------
Plugin 'scrooloose/nerdtree'
"" Enable if you NERDTree to start automatically
"autocmd vimenter * NERDTree
"" Toggle the NERD Tree on an off with F7
map <F7> :NERDTreeToggle<CR>
" Close the NERD Tree with Shift-F7
"nmap <S-F7> :NERDTreeClose<CR>
" Have NERD Tree always open on the right side
" let g:NERDTreeWinPos = "right"
"
" Supertab autocompletion
Plugin 'ervandew/supertab'
"
" Git commands
" :Git blame or :Git log
Plugin 'https://github.com/tpope/vim-fugitive'
"
" Start with a menu
Plugin 'mhinz/vim-startify'
"
" Use e.g. :Cheat ruby/map
Plugin 'dbeniamine/cheat.sh-vim'
"
" Git.  Use :GV for git log or :GV! for current file
Plugin 'junegunn/gv.vim'
"
" Add fzf search to vim.  Use :Files to bring up fuzzy finder
Plugin 'junegunn/fzf'
Plugin 'junegunn/fzf.vim'
"
" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

" Set up vim status bar
function! GitBranch()
  return system("git rev-parse --abbrev-ref HEAD 2>/dev/null | tr -d '\n'")
endfunction

function! StatuslineGit()
  let l:branchname = GitBranch()
  return strlen(l:branchname) > 0?'  '.l:branchname.' ':''
endfunction

set statusline=
set statusline+=%#DiffAdd#%{(mode()=='n')?'\ \ NORMAL\ ':''}
set statusline+=%#DiffChange#%{(mode()=='i')?'\ \ INSERT\ ':''}
set statusline+=%#DiffDelete#%{(mode()=='r')?'\ \ RPLACE\ ':''}
set statusline+=%#Cursor#%{(mode()=='v')?'\ \ VISUAL\ ':''}
set statusline+=\ %n\           " buffer number
set statusline+=%#Visual#       " colour
set statusline+=%{&paste?'\ PASTE\ ':''}
set statusline+=%{&spell?'\ SPELL\ ':''}
set statusline+=%#CursorIM#     " colour
set statusline+=%R                        " readonly flag
set statusline+=%M                        " modified [+] flag
set statusline+=%#Cursor#               " colour
set statusline+=%#CursorLine#     " colour
set statusline+=\ \ \ \ Path:\ %F\      " path
set statusline+=\ \ \ \ File:\ %t\      " short file name
set statusline+=\ \ \ \ branch:         " git branch name
set statusline+=%{StatuslineGit()}
set statusline+=%=                          " right align
set statusline+=%#CursorLine#   " colour
set statusline+=\ %Y\                   " file type
set statusline+=%#CursorIM#     " colour
set statusline+=\ %3l:%-2c\         " line + column
set statusline+=%#Cursor#       " colour
set statusline+=\ %3p%%\                " percentage

" Set up hot keys for fzf
let mapleader = "\<Space>"
nnoremap <leader>f :FZF -m<cr>
nnoremap <leader>r :FZF -m ~/workspace/repos<cr>
nnoremap <leader>b :Buffers<cr>

